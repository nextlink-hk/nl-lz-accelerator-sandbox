// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoggingStack Construct(LoggingStack):  Snapshot Test 1`] = `
{
  "Resources": {
    "AWSServiceRoleForAWSCloud9": {
      "Properties": {
        "AWSServiceName": "cloud9.amazonaws.com",
        "Description": "Service linked role for AWS Cloud9",
      },
      "Type": "AWS::IAM::ServiceLinkedRole",
    },
    "Accelerator3KeyAliasA5E4BDCB": {
      "Properties": {
        "AliasName": "alias/accelerator/kms/s3/key",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "Accelerator3KeyBF43FCD9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "Accelerator3KeyBF43FCD9": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "AWS Accelerator S3 Kms Key",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::333333333333:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey",
                "kms:Describe*",
              ],
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalOrgID": {
                    "Ref": "Organization29A5FC3F",
                  },
                  "kms:ViaService": "s3.us-east-1.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "Allow S3 to use the encryption key",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": "*",
              "Sid": "Allow AWS Services to encrypt and describe logs",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "AcceleratorCentralLogBucketKeyLookup26F8C418": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-CentralBucket-KeyArnParam-Role",
            ],
          ],
        },
        "invokingAccountID": "333333333333",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "333333333333",
        "parameterName": "/accelerator/logging/central-bucket/kms/arn",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorCentralSnsKmsArnParameter4E5BD663": {
      "Properties": {
        "Name": "/accelerator/kms/snstopic/key-arn",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "AcceleratorSnsTopicKey4E909F1D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AcceleratorCloudWatchKeyAlias6842582C": {
      "Properties": {
        "AliasName": "alias/accelerator/kms/cloudwatch/key",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "AcceleratorCloudWatchKeyF93B6E17",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "AcceleratorCloudWatchKeyF93B6E17": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "AWS Accelerator CloudWatch Kms Key",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::333333333333:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Describe*",
              ],
              "Condition": {
                "ArnLike": {
                  "kms:EncryptionContext:aws:logs:arn": "arn:aws:logs:us-east-1:*:log-group:*",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "logs.us-east-1.",
                      {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
              "Resource": "*",
              "Sid": "Allow Cloudwatch logs to use the encryption key",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "AcceleratorCloudWatchKmsArnParameter9BAD6EA0": {
      "Properties": {
        "Name": "/accelerator/kms/cloudwatch/key-arn",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "AcceleratorCloudWatchKeyF93B6E17",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AcceleratorKmsArnParameterKey13EEB1676": {
      "Properties": {
        "Name": "/accelerator/kms/key1/key-arn",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "AcceleratorKmsKeyKey1660964AC",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AcceleratorKmsKeyKey1660964AC": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KMS5",
              "reason": "CMK policy defined by customer provided policy definition file.",
            },
          ],
        },
      },
      "Properties": {
        "Description": "Test KMS Key",
        "EnableKeyRotation": true,
        "Enabled": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::333333333333:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::111111111111:root",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorKmsKeyKey1Alias6B1D2C45": {
      "Properties": {
        "AliasName": "alias/accelerator/test-key/key1",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "AcceleratorKmsKeyKey1660964AC",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "AcceleratorLambdaKeyAlias4E15225B": {
      "Properties": {
        "AliasName": "alias/accelerator/kms/lambda/key",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "AcceleratorLambdaKeyD279839E",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "AcceleratorLambdaKeyD279839E": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "AWS Accelerator Lambda Kms Key",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::333333333333:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "AcceleratorLambdaKmsArnParameterFECEE80C": {
      "Properties": {
        "Name": "/accelerator/kms/lambda/key-arn",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "AcceleratorLambdaKeyD279839E",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AcceleratorMetadataBucket1A53514B": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "AcceleratorMetadataBucketCmkC5190F6D",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "BucketName": "aws-accelerator-metadata-333333333333-us-east-1",
        "LifecycleConfiguration": {
          "Rules": [
            {
              "AbortIncompleteMultipartUpload": {
                "DaysAfterInitiation": 1,
              },
              "ExpirationInDays": 1825,
              "ExpiredObjectDeleteMarker": false,
              "Id": "LifecycleRuleaws-accelerator-metadata-333333333333-us-east-1",
              "NoncurrentVersionExpiration": {
                "NoncurrentDays": 1825,
              },
              "NoncurrentVersionTransitions": [
                {
                  "StorageClass": "DEEP_ARCHIVE",
                  "TransitionInDays": 366,
                },
              ],
              "Status": "Enabled",
              "Transitions": [
                {
                  "StorageClass": "DEEP_ARCHIVE",
                  "TransitionInDays": 365,
                },
              ],
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "AccessLogsBucketFA218D2A",
          },
          "LogFilePrefix": "aws-accelerator-metadata-333333333333-us-east-1/",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "AcceleratorMetadataBucketCmkAlias81144DE6": {
      "Properties": {
        "AliasName": "alias/accelerator/kms/metadata/key",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "AcceleratorMetadataBucketCmkC5190F6D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "AcceleratorMetadataBucketCmkC5190F6D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "The s3 bucket key for accelerator metadata collection",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::333333333333:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey",
                "kms:Describe*",
              ],
              "Condition": {
                "ArnLike": {
                  "aws:PrincipalARN": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::*:role/AWSAccelerator-*",
                      ],
                    ],
                  },
                },
                "StringEquals": {
                  "aws:PrincipalOrgID": {
                    "Ref": "Organization29A5FC3F",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "Allow org to perform encryption",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:GenerateDataKey",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::111111111111:role/test-access-role",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "AcceleratorMetadataBucketPolicyAE23D97C": {
      "Properties": {
        "Bucket": {
          "Ref": "AcceleratorMetadataBucket1A53514B",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorMetadataBucket1A53514B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AcceleratorMetadataBucket1A53514B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
              "Sid": "deny-insecure-connections",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorMetadataBucket1A53514B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AcceleratorMetadataBucket1A53514B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:Get*",
                "s3:List*",
              ],
              "Condition": {
                "ArnLike": {
                  "aws:PrincipalARN": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::*:role/AWSAccelerator-*",
                      ],
                    ],
                  },
                },
                "StringEquals": {
                  "aws:PrincipalOrgID": {
                    "Ref": "Organization29A5FC3F",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorMetadataBucket1A53514B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AcceleratorMetadataBucket1A53514B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:ListBucket",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::111111111111:role/test-access-role",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorMetadataBucket1A53514B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AcceleratorMetadataBucket1A53514B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "AcceleratorS3KmsArnParameter82C4C525": {
      "Properties": {
        "Name": "/accelerator/kms/s3/key-arn",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "Accelerator3KeyBF43FCD9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AcceleratorSnsTopicKey4E909F1D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": "AWS Accelerator SNS Topic Kms Key",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::333333333333:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:GenerateDataKey",
                "kms:Decrypt",
              ],
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalOrgID": {
                    "Ref": "Organization29A5FC3F",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com",
              },
              "Resource": "*",
              "Sid": "sns",
            },
            {
              "Action": [
                "kms:GenerateDataKey",
                "kms:Decrypt",
              ],
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": "333333333333",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudwatch.amazonaws.com",
              },
              "Resource": "*",
              "Sid": "cloudwatch",
            },
            {
              "Action": [
                "kms:GenerateDataKey",
                "kms:Decrypt",
              ],
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": "333333333333",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
              "Resource": "*",
              "Sid": "events",
            },
            {
              "Action": [
                "kms:GenerateDataKey",
                "kms:Decrypt",
              ],
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalOrgID": {
                    "Ref": "Organization29A5FC3F",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "crossaccount",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorSnsTopicKeyAliasCCEBAF56": {
      "Properties": {
        "AliasName": "alias/accelerator/kms/snstopic/key",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "AcceleratorSnsTopicKey4E909F1D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "AccessLogsBucketFA218D2A": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "AccessLogsBucket has server access logs disabled till the task for access logging completed.",
            },
          ],
        },
      },
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "aws-accelerator-s3-access-logs-333333333333-us-east-1",
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "AccessLogsBucketPolicy00F12803": {
      "Properties": {
        "Bucket": {
          "Ref": "AccessLogsBucketFA218D2A",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AccessLogsBucketFA218D2A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AccessLogsBucketFA218D2A",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
              "Sid": "deny-insecure-connections",
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": "333333333333",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "AccessLogsBucketFA218D2A",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "Allow write access for logging service principal",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "AutoScalingServiceLinkedRole": {
      "Properties": {
        "AWSServiceName": "autoscaling.amazonaws.com",
        "Description": "Default Service-Linked Role enables access to AWS Services and Resources used or managed by Auto Scaling",
      },
      "Type": "AWS::IAM::ServiceLinkedRole",
    },
    "CrossAccountCentralSnsTopicKMSArnSsmParamAccessRoleFA0EB249": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Allows only specific role arns.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalOrgID": {
                    "Ref": "Organization29A5FC3F",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameters",
                    "ssm:GetParameter",
                  ],
                  "Condition": {
                    "ArnLike": {
                      "aws:PrincipalARN": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition",
                              },
                              ":iam::*:role/AWSAccelerator-*",
                            ],
                          ],
                        },
                      ],
                    },
                    "StringEquals": {
                      "aws:PrincipalOrgID": {
                        "Ref": "Organization29A5FC3F",
                      },
                    },
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":ssm:*:*:parameter/accelerator/kms/snstopic/key-arn",
                      ],
                    ],
                  },
                },
                {
                  "Action": "ssm:DescribeParameters",
                  "Condition": {
                    "ArnLike": {
                      "aws:PrincipalARN": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition",
                              },
                              ":iam::*:role/AWSAccelerator-*",
                            ],
                          ],
                        },
                      ],
                    },
                    "StringEquals": {
                      "aws:PrincipalOrgID": {
                        "Ref": "Organization29A5FC3F",
                      },
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "default",
          },
        ],
        "RoleName": "AWSAccelerator-SnsTopic-KeyArnParam-Role",
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomOrganizationsDescribeOrganizationCustomResourceProviderHandler4C6F49D1": {
      "DependsOn": [
        "CustomOrganizationsDescribeOrganizationCustomResourceProviderRole775854D5",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomOrganizationsDescribeOrganizationCustomResourceProviderRole775854D5",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomOrganizationsDescribeOrganizationCustomResourceProviderRole775854D5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "organizations:DescribeOrganization",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomS3PutBucketReplicationCustomResourceProviderHandler1D75398C": {
      "DependsOn": [
        "CustomS3PutBucketReplicationCustomResourceProviderRole1C378488",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3PutBucketReplicationCustomResourceProviderRole1C378488",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3PutBucketReplicationCustomResourceProviderLogGroup6A67905E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "AcceleratorCloudWatchKeyF93B6E17",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomS3PutBucketReplicationCustomResourceProviderHandler1D75398C",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomS3PutBucketReplicationCustomResourceProviderRole1C378488": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "iam:PassRole",
                    "s3:PutLifecycleConfiguration",
                    "s3:PutReplicationConfiguration",
                    "s3:PutBucketVersioning",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "S3PutReplicationConfigurationTaskActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomS3PutPublicAccessBlockCustomResourceProviderHandler978E227B": {
      "DependsOn": [
        "CustomS3PutPublicAccessBlockCustomResourceProviderRole656EB36E",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3PutPublicAccessBlockCustomResourceProviderRole656EB36E",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3PutPublicAccessBlockCustomResourceProviderLogGroup354123A8": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "AcceleratorCloudWatchKeyF93B6E17",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomS3PutPublicAccessBlockCustomResourceProviderHandler978E227B",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomS3PutPublicAccessBlockCustomResourceProviderRole656EB36E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "s3:PutAccountPublicAccessBlock",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE": {
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "AcceleratorCloudWatchKeyF93B6E17",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameters",
                    "ssm:GetParameter",
                    "ssm:DescribeParameters",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmGetParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomUpdateSubscriptionFilterCustomResourceProviderHandler1BAA7608": {
      "DependsOn": [
        "CustomUpdateSubscriptionFilterCustomResourceProviderRole81A1751E",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomUpdateSubscriptionFilterCustomResourceProviderRole81A1751E",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomUpdateSubscriptionFilterCustomResourceProviderLogGroup0738E05B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "AcceleratorCloudWatchKeyF93B6E17",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomUpdateSubscriptionFilterCustomResourceProviderHandler1BAA7608",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomUpdateSubscriptionFilterCustomResourceProviderRole81A1751E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:PutRetentionPolicy",
                    "logs:AssociateKmsKey",
                    "logs:DescribeLogGroups",
                    "logs:DescribeSubscriptionFilters",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":logs:us-east-1:333333333333:log-group:*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "logs:PutSubscriptionFilter",
                    "logs:DeleteSubscriptionFilter",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":logs:us-east-1:333333333333:log-group:*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":logs:us-east-1:333333333333:destination:*",
                        ],
                      ],
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ElbAccessLogsBucketD6CD6A5D": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "ElbAccessLogsBucket has server access logs disabled till the task for access logging completed.",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "aws-accelerator-elb-access-logs-333333333333-us-east-1",
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "ElbAccessLogsBucketElbAccessLogsBucketReplicationAwsAcceleratorCentralLogs333333333333UsWest2ReplicationRole704C2B75": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/service-role/",
      },
      "Type": "AWS::IAM::Role",
    },
    "ElbAccessLogsBucketElbAccessLogsBucketReplicationAwsAcceleratorCentralLogs333333333333UsWest2ReplicationRoleDefaultPolicy13236CE3": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Allows only specific policy.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObjectLegalHold",
                "s3:GetObjectRetention",
                "s3:GetObjectVersion",
                "s3:GetObjectVersionAcl",
                "s3:GetObjectVersionForReplication",
                "s3:GetObjectVersionTagging",
                "s3:GetReplicationConfiguration",
                "s3:ListBucket",
                "s3:ReplicateDelete",
                "s3:ReplicateObject",
                "s3:ReplicateTags",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ElbAccessLogsBucketD6CD6A5D",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ElbAccessLogsBucketD6CD6A5D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetBucketVersioning",
                "s3:GetObjectVersionTagging",
                "s3:ObjectOwnerOverrideToBucketOwner",
                "s3:PutBucketVersioning",
                "s3:ReplicateDelete",
                "s3:ReplicateObject",
                "s3:ReplicateTags",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::aws-accelerator-central-logs-333333333333-us-west-2/*",
                  ],
                ],
              },
            },
            {
              "Action": "kms:Encrypt",
              "Effect": "Allow",
              "Resource": {
                "Ref": "AcceleratorCentralLogBucketKeyLookup26F8C418",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lbAccessLogsBucketElbAccessLogsBucketReplicationAwsAcceleratorCentralLogs333333333333UsWest2ReplicationRoleDefaultPolicy13236CE3",
        "Roles": [
          {
            "Ref": "ElbAccessLogsBucketElbAccessLogsBucketReplicationAwsAcceleratorCentralLogs333333333333UsWest2ReplicationRole704C2B75",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ElbAccessLogsBucketElbAccessLogsBucketReplicationC8860256": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomS3PutBucketReplicationCustomResourceProviderLogGroup6A67905E",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3PutBucketReplicationCustomResourceProviderHandler1D75398C",
            "Arn",
          ],
        },
        "destinationAccountId": "333333333333",
        "destinationBucketArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":s3:::aws-accelerator-central-logs-333333333333-us-west-2",
            ],
          ],
        },
        "destinationBucketKeyArn": {
          "Ref": "AcceleratorCentralLogBucketKeyLookup26F8C418",
        },
        "prefix": "",
        "replicationRoleArn": {
          "Fn::GetAtt": [
            "ElbAccessLogsBucketElbAccessLogsBucketReplicationAwsAcceleratorCentralLogs333333333333UsWest2ReplicationRole704C2B75",
            "Arn",
          ],
        },
        "sourceBucketName": {
          "Ref": "ElbAccessLogsBucketD6CD6A5D",
        },
      },
      "Type": "Custom::S3PutBucketReplication",
      "UpdateReplacePolicy": "Delete",
    },
    "ElbAccessLogsBucketPolicyC6AEEA2E": {
      "Properties": {
        "Bucket": {
          "Ref": "ElbAccessLogsBucketD6CD6A5D",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ElbAccessLogsBucketD6CD6A5D",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ElbAccessLogsBucketD6CD6A5D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
              "Sid": "deny-insecure-connections",
            },
            {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "ElbAccessLogsBucketD6CD6A5D",
                  "Arn",
                ],
              },
              "Sid": "Allow get acl access for SSM principal",
            },
            {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::127311923021:root",
                    ],
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "ElbAccessLogsBucketD6CD6A5D",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "Allow write access for ELB Account principal",
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "ElbAccessLogsBucketD6CD6A5D",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "Allow write access for delivery logging service principal",
            },
            {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "ElbAccessLogsBucketD6CD6A5D",
                  "Arn",
                ],
              },
              "Sid": "Allow read bucket ACL access for delivery logging service principal",
            },
            {
              "Action": [
                "s3:GetBucketLocation",
                "s3:PutObject",
              ],
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalOrgID": {
                    "Ref": "Organization29A5FC3F",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ElbAccessLogsBucketD6CD6A5D",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ElbAccessLogsBucketD6CD6A5D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
              "Sid": "Allow Organization principals to use of the bucket",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FirehoseToS3SetupFirehoseCloudWatchDb3683542E": {
      "Properties": {
        "CatalogId": "333333333333",
        "DatabaseInput": {
          "Description": "Glue database to store AWS Accelerator CloudWatch logs",
          "Name": "aws-accelerator-subscription-database",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "FirehoseToS3SetupFirehoseCloudWatchTable07CBDE10": {
      "Properties": {
        "CatalogId": "333333333333",
        "DatabaseName": {
          "Ref": "FirehoseToS3SetupFirehoseCloudWatchDb3683542E",
        },
        "TableInput": {
          "Description": "Glue table to store AWS Accelerator CloudWatch logs",
          "Name": "aws-accelerator-firehose-transformation-table",
          "StorageDescriptor": {
            "Columns": [
              {
                "Comment": "Data messages use the "DATA_MESSAGE" type. Sometimes CloudWatch Logs may emit Kinesis records with a "CONTROL_MESSAGE" type, mainly for checking if the destination is reachable.",
                "Name": "messagetype",
                "Type": "string",
              },
              {
                "Comment": "The AWS Account ID of the originating log data",
                "Name": "owner",
                "Type": "string",
              },
              {
                "Comment": "The log group name of the originating log data.",
                "Name": "loggroup",
                "Type": "string",
              },
              {
                "Comment": "The list of comma delimited subscription filter names that matched with the originating log data.",
                "Name": "subscriptionfilters",
                "Type": "string",
              },
              {
                "Comment": "The ID property is a unique identifier for every log event.",
                "Name": "logeventsid",
                "Type": "string",
              },
              {
                "Comment": "Timestamp of the log event",
                "Name": "logeventstimestamp",
                "Type": "timestamp",
              },
              {
                "Comment": "REPLACED-JSON-PATH.json",
                "Name": "logeventsmessage",
                "Type": "string",
              },
            ],
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "FirehoseToS3SetupFirehoseKinesisStreamServiceRoleDCF2BF9E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to get records from Kinesis.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kinesis:DescribeStream",
                    "kinesis:GetShardIterator",
                    "kinesis:GetRecords",
                    "kinesis:ListShards",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "LogsKinesisStreamCfn",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey",
                    "kms:ReEncryptTo",
                    "kms:GenerateDataKeyWithoutPlaintext",
                    "kms:GenerateDataKeyPairWithoutPlaintext",
                    "kms:GenerateDataKeyPair",
                    "kms:ReEncryptFrom",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "LogsReplicationKeyAE749486",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessKinesis",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FirehoseToS3SetupFirehosePrefixProcessingLambdaCFF0C71A": {
      "DependsOn": [
        "FirehoseToS3SetupFirehosePrefixProcessingLambdaServiceRole55C795C1",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "DynamicS3LogPartitioningMapping": "REPLACED-JSON-PATH.json",
          },
        },
        "FunctionName": "AWSAccelerator-FirehoseRecordsProcessor",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "AcceleratorLambdaKeyD279839E",
            "Arn",
          ],
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "FirehoseToS3SetupFirehosePrefixProcessingLambdaServiceRole55C795C1",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "FirehoseToS3SetupFirehosePrefixProcessingLambdaServiceRole55C795C1": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FirehoseToS3SetupFirehoseS3ServiceRole1E95E56A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Bucket permissions are wildcards to abort downloads and clean up objects. KMS permissions are wildcards to re-encrypt entities.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to place Kinesis records in the central bucket.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:GenerateDataKey",
                  ],
                  "Condition": {
                    "StringEquals": {
                      "kms:ViaService": "s3.us-east-1.amazonaws.com",
                    },
                    "StringLike": {
                      "kms:EncryptionContext:aws:s3:arn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition",
                            },
                            ":s3:::aws-accelerator-central-logs-333333333333-us-west-2/*",
                          ],
                        ],
                      },
                    },
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Ref": "AcceleratorCentralLogBucketKeyLookup26F8C418",
                  },
                },
                {
                  "Action": [
                    "s3:AbortMultipartUpload",
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:PutObject",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::aws-accelerator-central-logs-333333333333-us-west-2",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::aws-accelerator-central-logs-333333333333-us-west-2/*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:GetFunctionConfiguration",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "FirehoseToS3SetupFirehosePrefixProcessingLambdaCFF0C71A",
                              "Arn",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "FirehoseToS3SetupFirehosePrefixProcessingLambdaCFF0C71A",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "glue:GetTable",
                    "glue:GetTableVersion",
                    "glue:GetTableVersions",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:us-east-1:333333333333:catalog",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:us-east-1:333333333333:database/",
                          {
                            "Ref": "FirehoseToS3SetupFirehoseCloudWatchDb3683542E",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:us-east-1:333333333333:table/",
                          {
                            "Ref": "FirehoseToS3SetupFirehoseCloudWatchDb3683542E",
                          },
                          "/",
                          {
                            "Ref": "FirehoseToS3SetupFirehoseCloudWatchTable07CBDE10",
                          },
                        ],
                      ],
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessS3KmsLambda",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FirehoseToS3SetupKinesisFirehoseStreamDynamicPartitioning65876320": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KDF1",
              "reason": "Customer managed key is used to encrypt firehose delivery stream.",
            },
          ],
        },
      },
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":s3:::aws-accelerator-central-logs-333333333333-us-west-2",
              ],
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 64,
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": true,
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {
                  "CaseInsensitive": true,
                },
              },
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {
                  "Compression": "SNAPPY",
                },
              },
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "FirehoseToS3SetupFirehoseCloudWatchDb3683542E",
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "FirehoseToS3SetupFirehoseS3ServiceRole1E95E56A",
                  "Arn",
                ],
              },
              "TableName": {
                "Ref": "FirehoseToS3SetupFirehoseCloudWatchTable07CBDE10",
              },
            },
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Ref": "AcceleratorCentralLogBucketKeyLookup26F8C418",
              },
            },
          },
          "ErrorOutputPrefix": "CloudWatchLogs/processing-failed",
          "Prefix": "!{partitionKeyFromLambda:dynamicPrefix}",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "FirehoseToS3SetupFirehosePrefixProcessingLambdaCFF0C71A",
                        "Arn",
                      ],
                    },
                  },
                  {
                    "ParameterName": "NumberOfRetries",
                    "ParameterValue": "3",
                  },
                  {
                    "ParameterName": "BufferSizeInMBs",
                    "ParameterValue": "0.2",
                  },
                  {
                    "ParameterName": "BufferIntervalInSeconds",
                    "ParameterValue": "60",
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "FirehoseToS3SetupFirehoseS3ServiceRole1E95E56A",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "LogsKinesisStreamCfn",
              "Arn",
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "FirehoseToS3SetupFirehoseKinesisStreamServiceRoleDCF2BF9E",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "LogsDestinationSetup408DBC7D": {
      "Properties": {
        "DestinationName": "AWSAcceleratorCloudWatchToS3",
        "DestinationPolicy": {
          "Fn::Join": [
            "",
            [
              "{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"AWS":["*"]},"Action":"logs:PutSubscriptionFilter","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":logs:us-east-1:333333333333:destination:AWSAcceleratorCloudWatchToS3","Condition":{"StringEquals":{"aws:PrincipalOrgID":"",
              {
                "Ref": "Organization29A5FC3F",
              },
              ""}}}]}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "LogsDestinationSetupLogsKinesisRoleBBFE4D49",
            "Arn",
          ],
        },
        "TargetArn": {
          "Fn::GetAtt": [
            "LogsKinesisStreamCfn",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::Destination",
    },
    "LogsDestinationSetupLogsKinesisRoleBBFE4D49": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "logs.us-east-1.",
                      {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kinesis:ListShards",
                    "kinesis:PutRecord",
                    "kinesis:PutRecords",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "LogsKinesisStreamCfn",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "KinesisAccess",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey",
                    "kms:ReEncryptTo",
                    "kms:GenerateDataKeyWithoutPlaintext",
                    "kms:GenerateDataKeyPairWithoutPlaintext",
                    "kms:GenerateDataKeyPair",
                    "kms:ReEncryptFrom",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "LogsReplicationKeyAE749486",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "KmsAccess",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogsKinesisStreamCfn": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KDS3",
              "reason": "Customer managed key is being used to encrypt Kinesis Data Stream",
            },
          ],
        },
      },
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "EncryptionType": "KMS",
          "KeyId": {
            "Fn::GetAtt": [
              "LogsReplicationKeyAE749486",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "LogsReplicationKeyAE749486": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": "AWS Accelerator CloudWatch Logs Replication Kms Key",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::333333333333:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "LogsReplicationKeyAlias6226562C": {
      "Properties": {
        "AliasName": "alias/accelerator/kms/replication/cloudwatch/logs/key",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "LogsReplicationKeyAE749486",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "LogsSubscriptionFilter58C57C6B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomUpdateSubscriptionFilterCustomResourceProviderLogGroup0738E05B",
        "LogsDestinationSetupLogsKinesisRoleBBFE4D49",
        "LogsDestinationSetup408DBC7D",
      ],
      "Properties": {
        "LogDestination": "arn:aws:logs:us-east-1:333333333333:destination:AWSAcceleratorCloudWatchToS3",
        "LogExclusion": "{"account":"333333333333","region":"us-east-1","logGroupNames":["test1/*"]}",
        "LogKmsKeyArn": {
          "Fn::GetAtt": [
            "AcceleratorCloudWatchKeyF93B6E17",
            "Arn",
          ],
        },
        "LogRetention": "3653",
        "LogSubscriptionRole": {
          "Fn::GetAtt": [
            "SubscriptionFilterRoleB0B89330",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomUpdateSubscriptionFilterCustomResourceProviderHandler1BAA7608",
            "Arn",
          ],
        },
      },
      "Type": "Custom::UpdateSubscriptionFilter",
      "UpdateReplacePolicy": "Delete",
    },
    "NewCloudWatchLogsCreateEventNewLogGroupCreatedRuleA43A0A6D": {
      "DependsOn": [
        "LogsSubscriptionFilter58C57C6B",
      ],
      "Properties": {
        "EventPattern": {
          "detail": {
            "eventName": [
              "CreateLogGroup",
            ],
            "eventSource": [
              "logs.amazonaws.com",
            ],
          },
          "detail-type": [
            "AWS API Call via CloudTrail",
          ],
          "source": [
            "aws.logs",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunction1A3BCE58",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RetryPolicy": {
              "MaximumRetryAttempts": 5,
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "NewCloudWatchLogsCreateEventNewLogGroupCreatedRuleAllowEventRuleAWSAcceleratorLoggingStack333333333333useast1NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunction8CBF4C192DFF85CD": {
      "DependsOn": [
        "LogsSubscriptionFilter58C57C6B",
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunction1A3BCE58",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "NewCloudWatchLogsCreateEventNewLogGroupCreatedRuleA43A0A6D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunction1A3BCE58": {
      "DependsOn": [
        "LogsSubscriptionFilter58C57C6B",
        "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunctionServiceRoleDefaultPolicy5DE2EB5C",
        "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunctionServiceRoleF408E8D2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "LogDestination": "arn:aws:logs:us-east-1:333333333333:destination:AWSAcceleratorCloudWatchToS3",
            "LogExclusion": "{"account":"333333333333","region":"us-east-1","logGroupNames":["test1/*"]}",
            "LogKmsKeyArn": {
              "Fn::GetAtt": [
                "AcceleratorCloudWatchKeyF93B6E17",
                "Arn",
              ],
            },
            "LogRetention": "3653",
            "LogSubscriptionRole": {
              "Fn::GetAtt": [
                "SubscriptionFilterRoleB0B89330",
                "Arn",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "AcceleratorLambdaKeyD279839E",
            "Arn",
          ],
        },
        "Role": {
          "Fn::GetAtt": [
            "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunctionServiceRoleF408E8D2",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunctionServiceRoleDefaultPolicy5DE2EB5C": {
      "DependsOn": [
        "LogsSubscriptionFilter58C57C6B",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "This role needs permissions to change retention and subscription filter for any new log group that is created to enable log replication.",
            },
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:AssociateKmsKey",
                "logs:DescribeLogGroups",
                "logs:DescribeSubscriptionFilters",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:us-east-1:333333333333:log-group:*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:PutSubscriptionFilter",
                "logs:DeleteSubscriptionFilter",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:us-east-1:333333333333:log-group:*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:us-east-1:333333333333:destination:*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunctionServiceRoleDefaultPolicy5DE2EB5C",
        "Roles": [
          {
            "Ref": "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunctionServiceRoleF408E8D2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunctionServiceRoleF408E8D2": {
      "DependsOn": [
        "LogsSubscriptionFilter58C57C6B",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "This role needs permissions to change retention and subscription filter for any new log group that is created to enable log replication.",
            },
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Organization29A5FC3F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomOrganizationsDescribeOrganizationCustomResourceProviderHandler4C6F49D1",
            "Arn",
          ],
        },
        "partition": {
          "Ref": "AWS::Partition",
        },
      },
      "Type": "Custom::DescribeOrganization",
      "UpdateReplacePolicy": "Delete",
    },
    "S3PublicAccessBlock344F906B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomS3PutPublicAccessBlockCustomResourceProviderLogGroup354123A8",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3PutPublicAccessBlockCustomResourceProviderHandler978E227B",
            "Arn",
          ],
        },
        "accountId": "333333333333",
        "blockPublicAcls": true,
        "blockPublicPolicy": true,
        "ignorePublicAcls": true,
        "restrictPublicBuckets": true,
      },
      "Type": "Custom::PutPublicAccessBlock",
      "UpdateReplacePolicy": "Delete",
    },
    "SecuritySNSTopicE3C1354E": {
      "Properties": {
        "DisplayName": "aws-accelerator-Security",
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "AcceleratorSnsTopicKey4E909F1D",
            "Arn",
          ],
        },
        "TopicName": "aws-accelerator-Security",
      },
      "Type": "AWS::SNS::Topic",
    },
    "SecuritySNSTopicPolicyFA391E1F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudwatch.amazonaws.com",
              },
              "Resource": {
                "Ref": "SecuritySNSTopicE3C1354E",
              },
              "Sid": "0",
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
              "Resource": {
                "Ref": "SecuritySNSTopicE3C1354E",
              },
              "Sid": "1",
            },
            {
              "Action": "sns:Publish",
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalOrgID": {
                    "Ref": "Organization29A5FC3F",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Ref": "SecuritySNSTopicE3C1354E",
              },
              "Sid": "2",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": [
          {
            "Ref": "SecuritySNSTopicE3C1354E",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
    "SecuritySNSTopicnotifysecurityexamplecomUPDATEEMAILADDRESS3E2951A5": {
      "Properties": {
        "Endpoint": "<notify-security>@example.com <----- UPDATE EMAIL ADDRESS",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "SecuritySNSTopicE3C1354E",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "SsmParamAcceleratorVersionFF83282D": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-LoggingStack-333333333333-us-east-1/version",
        "Type": "String",
        "Value": "1.4.1",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamStackId521A78D3": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-LoggingStack-333333333333-us-east-1/stack-id",
        "Type": "String",
        "Value": {
          "Ref": "AWS::StackId",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SubscriptionFilterRoleB0B89330": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Access is needed to ready all log events across all log groups for replication to S3.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "logs.us-east-1.",
                      {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Subscription Filter to allow access to CloudWatch Destination",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "accessLogEvents",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;

exports[`LoggingStackOuTargets Construct(LoggingStackOuTargets):  Snapshot Test 1`] = `
{
  "Resources": {
    "AWSServiceRoleForAWSCloud9": {
      "Properties": {
        "AWSServiceName": "cloud9.amazonaws.com",
        "Description": "Service linked role for AWS Cloud9",
      },
      "Type": "AWS::IAM::ServiceLinkedRole",
    },
    "Accelerator3KeyAliasA5E4BDCB": {
      "Properties": {
        "AliasName": "alias/accelerator/kms/s3/key",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "Accelerator3KeyBF43FCD9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "Accelerator3KeyBF43FCD9": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "AWS Accelerator S3 Kms Key",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::333333333333:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey",
                "kms:Describe*",
              ],
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalOrgID": {
                    "Ref": "Organization29A5FC3F",
                  },
                  "kms:ViaService": "s3.us-east-1.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "Allow S3 to use the encryption key",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": "*",
              "Sid": "Allow AWS Services to encrypt and describe logs",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "AcceleratorCentralLogBucketKeyLookup26F8C418": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-CentralBucket-KeyArnParam-Role",
            ],
          ],
        },
        "invokingAccountID": "333333333333",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "333333333333",
        "parameterName": "/accelerator/logging/central-bucket/kms/arn",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorCentralSnsKmsArnParameter4E5BD663": {
      "Properties": {
        "Name": "/accelerator/kms/snstopic/key-arn",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "AcceleratorSnsTopicKey4E909F1D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AcceleratorCloudWatchKeyAlias6842582C": {
      "Properties": {
        "AliasName": "alias/accelerator/kms/cloudwatch/key",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "AcceleratorCloudWatchKeyF93B6E17",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "AcceleratorCloudWatchKeyF93B6E17": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "AWS Accelerator CloudWatch Kms Key",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::333333333333:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Describe*",
              ],
              "Condition": {
                "ArnLike": {
                  "kms:EncryptionContext:aws:logs:arn": "arn:aws:logs:us-east-1:*:log-group:*",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "logs.us-east-1.",
                      {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
              "Resource": "*",
              "Sid": "Allow Cloudwatch logs to use the encryption key",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "AcceleratorCloudWatchKmsArnParameter9BAD6EA0": {
      "Properties": {
        "Name": "/accelerator/kms/cloudwatch/key-arn",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "AcceleratorCloudWatchKeyF93B6E17",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AcceleratorKmsArnParameterKey13EEB1676": {
      "Properties": {
        "Name": "/accelerator/kms/key1/key-arn",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "AcceleratorKmsKeyKey1660964AC",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AcceleratorKmsKeyKey1660964AC": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KMS5",
              "reason": "CMK policy defined by customer provided policy definition file.",
            },
          ],
        },
      },
      "Properties": {
        "Description": "Test KMS Key",
        "EnableKeyRotation": true,
        "Enabled": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::333333333333:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::111111111111:root",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorKmsKeyKey1Alias6B1D2C45": {
      "Properties": {
        "AliasName": "alias/accelerator/test-key/key1",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "AcceleratorKmsKeyKey1660964AC",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "AcceleratorLambdaKeyAlias4E15225B": {
      "Properties": {
        "AliasName": "alias/accelerator/kms/lambda/key",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "AcceleratorLambdaKeyD279839E",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "AcceleratorLambdaKeyD279839E": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "AWS Accelerator Lambda Kms Key",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::333333333333:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "AcceleratorLambdaKmsArnParameterFECEE80C": {
      "Properties": {
        "Name": "/accelerator/kms/lambda/key-arn",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "AcceleratorLambdaKeyD279839E",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AcceleratorMetadataBucket1A53514B": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "AcceleratorMetadataBucketCmkC5190F6D",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "BucketName": "aws-accelerator-metadata-333333333333-us-east-1",
        "LifecycleConfiguration": {
          "Rules": [
            {
              "AbortIncompleteMultipartUpload": {
                "DaysAfterInitiation": 1,
              },
              "ExpirationInDays": 1825,
              "ExpiredObjectDeleteMarker": false,
              "Id": "LifecycleRuleaws-accelerator-metadata-333333333333-us-east-1",
              "NoncurrentVersionExpiration": {
                "NoncurrentDays": 1825,
              },
              "NoncurrentVersionTransitions": [
                {
                  "StorageClass": "DEEP_ARCHIVE",
                  "TransitionInDays": 366,
                },
              ],
              "Status": "Enabled",
              "Transitions": [
                {
                  "StorageClass": "DEEP_ARCHIVE",
                  "TransitionInDays": 365,
                },
              ],
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "AccessLogsBucketFA218D2A",
          },
          "LogFilePrefix": "aws-accelerator-metadata-333333333333-us-east-1/",
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "AcceleratorMetadataBucketCmkAlias81144DE6": {
      "Properties": {
        "AliasName": "alias/accelerator/kms/metadata/key",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "AcceleratorMetadataBucketCmkC5190F6D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "AcceleratorMetadataBucketCmkC5190F6D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "The s3 bucket key for accelerator metadata collection",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::333333333333:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey",
                "kms:Describe*",
              ],
              "Condition": {
                "ArnLike": {
                  "aws:PrincipalARN": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::*:role/AWSAccelerator-*",
                      ],
                    ],
                  },
                },
                "StringEquals": {
                  "aws:PrincipalOrgID": {
                    "Ref": "Organization29A5FC3F",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "Allow org to perform encryption",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:GenerateDataKey",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::111111111111:role/test-access-role",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "AcceleratorMetadataBucketPolicyAE23D97C": {
      "Properties": {
        "Bucket": {
          "Ref": "AcceleratorMetadataBucket1A53514B",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorMetadataBucket1A53514B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AcceleratorMetadataBucket1A53514B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
              "Sid": "deny-insecure-connections",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorMetadataBucket1A53514B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AcceleratorMetadataBucket1A53514B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:Get*",
                "s3:List*",
              ],
              "Condition": {
                "ArnLike": {
                  "aws:PrincipalARN": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::*:role/AWSAccelerator-*",
                      ],
                    ],
                  },
                },
                "StringEquals": {
                  "aws:PrincipalOrgID": {
                    "Ref": "Organization29A5FC3F",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorMetadataBucket1A53514B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AcceleratorMetadataBucket1A53514B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:ListBucket",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::111111111111:role/test-access-role",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorMetadataBucket1A53514B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AcceleratorMetadataBucket1A53514B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "AcceleratorS3KmsArnParameter82C4C525": {
      "Properties": {
        "Name": "/accelerator/kms/s3/key-arn",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "Accelerator3KeyBF43FCD9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AcceleratorSnsTopicKey4E909F1D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": "AWS Accelerator SNS Topic Kms Key",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::333333333333:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:GenerateDataKey",
                "kms:Decrypt",
              ],
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalOrgID": {
                    "Ref": "Organization29A5FC3F",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com",
              },
              "Resource": "*",
              "Sid": "sns",
            },
            {
              "Action": [
                "kms:GenerateDataKey",
                "kms:Decrypt",
              ],
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": "333333333333",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudwatch.amazonaws.com",
              },
              "Resource": "*",
              "Sid": "cloudwatch",
            },
            {
              "Action": [
                "kms:GenerateDataKey",
                "kms:Decrypt",
              ],
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": "333333333333",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
              "Resource": "*",
              "Sid": "events",
            },
            {
              "Action": [
                "kms:GenerateDataKey",
                "kms:Decrypt",
              ],
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalOrgID": {
                    "Ref": "Organization29A5FC3F",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "crossaccount",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorSnsTopicKeyAliasCCEBAF56": {
      "Properties": {
        "AliasName": "alias/accelerator/kms/snstopic/key",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "AcceleratorSnsTopicKey4E909F1D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "AccessLogsBucketFA218D2A": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "AccessLogsBucket has server access logs disabled till the task for access logging completed.",
            },
          ],
        },
      },
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "aws-accelerator-s3-access-logs-333333333333-us-east-1",
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "AccessLogsBucketPolicy00F12803": {
      "Properties": {
        "Bucket": {
          "Ref": "AccessLogsBucketFA218D2A",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AccessLogsBucketFA218D2A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AccessLogsBucketFA218D2A",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
              "Sid": "deny-insecure-connections",
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": "333333333333",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "AccessLogsBucketFA218D2A",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "Allow write access for logging service principal",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "AutoScalingServiceLinkedRole": {
      "Properties": {
        "AWSServiceName": "autoscaling.amazonaws.com",
        "Description": "Default Service-Linked Role enables access to AWS Services and Resources used or managed by Auto Scaling",
      },
      "Type": "AWS::IAM::ServiceLinkedRole",
    },
    "CrossAccountCentralSnsTopicKMSArnSsmParamAccessRoleFA0EB249": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Allows only specific role arns.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalOrgID": {
                    "Ref": "Organization29A5FC3F",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameters",
                    "ssm:GetParameter",
                  ],
                  "Condition": {
                    "ArnLike": {
                      "aws:PrincipalARN": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition",
                              },
                              ":iam::*:role/AWSAccelerator-*",
                            ],
                          ],
                        },
                      ],
                    },
                    "StringEquals": {
                      "aws:PrincipalOrgID": {
                        "Ref": "Organization29A5FC3F",
                      },
                    },
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":ssm:*:*:parameter/accelerator/kms/snstopic/key-arn",
                      ],
                    ],
                  },
                },
                {
                  "Action": "ssm:DescribeParameters",
                  "Condition": {
                    "ArnLike": {
                      "aws:PrincipalARN": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition",
                              },
                              ":iam::*:role/AWSAccelerator-*",
                            ],
                          ],
                        },
                      ],
                    },
                    "StringEquals": {
                      "aws:PrincipalOrgID": {
                        "Ref": "Organization29A5FC3F",
                      },
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "default",
          },
        ],
        "RoleName": "AWSAccelerator-SnsTopic-KeyArnParam-Role",
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomOrganizationsDescribeOrganizationCustomResourceProviderHandler4C6F49D1": {
      "DependsOn": [
        "CustomOrganizationsDescribeOrganizationCustomResourceProviderRole775854D5",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomOrganizationsDescribeOrganizationCustomResourceProviderRole775854D5",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomOrganizationsDescribeOrganizationCustomResourceProviderRole775854D5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "organizations:DescribeOrganization",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomS3PutBucketReplicationCustomResourceProviderHandler1D75398C": {
      "DependsOn": [
        "CustomS3PutBucketReplicationCustomResourceProviderRole1C378488",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3PutBucketReplicationCustomResourceProviderRole1C378488",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3PutBucketReplicationCustomResourceProviderLogGroup6A67905E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "AcceleratorCloudWatchKeyF93B6E17",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomS3PutBucketReplicationCustomResourceProviderHandler1D75398C",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomS3PutBucketReplicationCustomResourceProviderRole1C378488": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "iam:PassRole",
                    "s3:PutLifecycleConfiguration",
                    "s3:PutReplicationConfiguration",
                    "s3:PutBucketVersioning",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "S3PutReplicationConfigurationTaskActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomS3PutPublicAccessBlockCustomResourceProviderHandler978E227B": {
      "DependsOn": [
        "CustomS3PutPublicAccessBlockCustomResourceProviderRole656EB36E",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3PutPublicAccessBlockCustomResourceProviderRole656EB36E",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3PutPublicAccessBlockCustomResourceProviderLogGroup354123A8": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "AcceleratorCloudWatchKeyF93B6E17",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomS3PutPublicAccessBlockCustomResourceProviderHandler978E227B",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomS3PutPublicAccessBlockCustomResourceProviderRole656EB36E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "s3:PutAccountPublicAccessBlock",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE": {
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "AcceleratorCloudWatchKeyF93B6E17",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameters",
                    "ssm:GetParameter",
                    "ssm:DescribeParameters",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmGetParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomUpdateSubscriptionFilterCustomResourceProviderHandler1BAA7608": {
      "DependsOn": [
        "CustomUpdateSubscriptionFilterCustomResourceProviderRole81A1751E",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomUpdateSubscriptionFilterCustomResourceProviderRole81A1751E",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomUpdateSubscriptionFilterCustomResourceProviderLogGroup0738E05B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "AcceleratorCloudWatchKeyF93B6E17",
            "Arn",
          ],
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomUpdateSubscriptionFilterCustomResourceProviderHandler1BAA7608",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomUpdateSubscriptionFilterCustomResourceProviderRole81A1751E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:PutRetentionPolicy",
                    "logs:AssociateKmsKey",
                    "logs:DescribeLogGroups",
                    "logs:DescribeSubscriptionFilters",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":logs:us-east-1:333333333333:log-group:*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "logs:PutSubscriptionFilter",
                    "logs:DeleteSubscriptionFilter",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":logs:us-east-1:333333333333:log-group:*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":logs:us-east-1:333333333333:destination:*",
                        ],
                      ],
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ElbAccessLogsBucketD6CD6A5D": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "ElbAccessLogsBucket has server access logs disabled till the task for access logging completed.",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "aws-accelerator-elb-access-logs-333333333333-us-east-1",
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "ElbAccessLogsBucketElbAccessLogsBucketReplicationAwsAcceleratorCentralLogs333333333333UsWest2ReplicationRole704C2B75": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/service-role/",
      },
      "Type": "AWS::IAM::Role",
    },
    "ElbAccessLogsBucketElbAccessLogsBucketReplicationAwsAcceleratorCentralLogs333333333333UsWest2ReplicationRoleDefaultPolicy13236CE3": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Allows only specific policy.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObjectLegalHold",
                "s3:GetObjectRetention",
                "s3:GetObjectVersion",
                "s3:GetObjectVersionAcl",
                "s3:GetObjectVersionForReplication",
                "s3:GetObjectVersionTagging",
                "s3:GetReplicationConfiguration",
                "s3:ListBucket",
                "s3:ReplicateDelete",
                "s3:ReplicateObject",
                "s3:ReplicateTags",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ElbAccessLogsBucketD6CD6A5D",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ElbAccessLogsBucketD6CD6A5D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetBucketVersioning",
                "s3:GetObjectVersionTagging",
                "s3:ObjectOwnerOverrideToBucketOwner",
                "s3:PutBucketVersioning",
                "s3:ReplicateDelete",
                "s3:ReplicateObject",
                "s3:ReplicateTags",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::aws-accelerator-central-logs-333333333333-us-west-2/*",
                  ],
                ],
              },
            },
            {
              "Action": "kms:Encrypt",
              "Effect": "Allow",
              "Resource": {
                "Ref": "AcceleratorCentralLogBucketKeyLookup26F8C418",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lbAccessLogsBucketElbAccessLogsBucketReplicationAwsAcceleratorCentralLogs333333333333UsWest2ReplicationRoleDefaultPolicy13236CE3",
        "Roles": [
          {
            "Ref": "ElbAccessLogsBucketElbAccessLogsBucketReplicationAwsAcceleratorCentralLogs333333333333UsWest2ReplicationRole704C2B75",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ElbAccessLogsBucketElbAccessLogsBucketReplicationC8860256": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomS3PutBucketReplicationCustomResourceProviderLogGroup6A67905E",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3PutBucketReplicationCustomResourceProviderHandler1D75398C",
            "Arn",
          ],
        },
        "destinationAccountId": "333333333333",
        "destinationBucketArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":s3:::aws-accelerator-central-logs-333333333333-us-west-2",
            ],
          ],
        },
        "destinationBucketKeyArn": {
          "Ref": "AcceleratorCentralLogBucketKeyLookup26F8C418",
        },
        "prefix": "",
        "replicationRoleArn": {
          "Fn::GetAtt": [
            "ElbAccessLogsBucketElbAccessLogsBucketReplicationAwsAcceleratorCentralLogs333333333333UsWest2ReplicationRole704C2B75",
            "Arn",
          ],
        },
        "sourceBucketName": {
          "Ref": "ElbAccessLogsBucketD6CD6A5D",
        },
      },
      "Type": "Custom::S3PutBucketReplication",
      "UpdateReplacePolicy": "Delete",
    },
    "ElbAccessLogsBucketPolicyC6AEEA2E": {
      "Properties": {
        "Bucket": {
          "Ref": "ElbAccessLogsBucketD6CD6A5D",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ElbAccessLogsBucketD6CD6A5D",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ElbAccessLogsBucketD6CD6A5D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
              "Sid": "deny-insecure-connections",
            },
            {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "ElbAccessLogsBucketD6CD6A5D",
                  "Arn",
                ],
              },
              "Sid": "Allow get acl access for SSM principal",
            },
            {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::127311923021:root",
                    ],
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "ElbAccessLogsBucketD6CD6A5D",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "Allow write access for ELB Account principal",
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "ElbAccessLogsBucketD6CD6A5D",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "Allow write access for delivery logging service principal",
            },
            {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "ElbAccessLogsBucketD6CD6A5D",
                  "Arn",
                ],
              },
              "Sid": "Allow read bucket ACL access for delivery logging service principal",
            },
            {
              "Action": [
                "s3:GetBucketLocation",
                "s3:PutObject",
              ],
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalOrgID": {
                    "Ref": "Organization29A5FC3F",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ElbAccessLogsBucketD6CD6A5D",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ElbAccessLogsBucketD6CD6A5D",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
              "Sid": "Allow Organization principals to use of the bucket",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FirehoseToS3SetupFirehoseCloudWatchDb3683542E": {
      "Properties": {
        "CatalogId": "333333333333",
        "DatabaseInput": {
          "Description": "Glue database to store AWS Accelerator CloudWatch logs",
          "Name": "aws-accelerator-subscription-database",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "FirehoseToS3SetupFirehoseCloudWatchTable07CBDE10": {
      "Properties": {
        "CatalogId": "333333333333",
        "DatabaseName": {
          "Ref": "FirehoseToS3SetupFirehoseCloudWatchDb3683542E",
        },
        "TableInput": {
          "Description": "Glue table to store AWS Accelerator CloudWatch logs",
          "Name": "aws-accelerator-firehose-transformation-table",
          "StorageDescriptor": {
            "Columns": [
              {
                "Comment": "Data messages use the "DATA_MESSAGE" type. Sometimes CloudWatch Logs may emit Kinesis records with a "CONTROL_MESSAGE" type, mainly for checking if the destination is reachable.",
                "Name": "messagetype",
                "Type": "string",
              },
              {
                "Comment": "The AWS Account ID of the originating log data",
                "Name": "owner",
                "Type": "string",
              },
              {
                "Comment": "The log group name of the originating log data.",
                "Name": "loggroup",
                "Type": "string",
              },
              {
                "Comment": "The list of comma delimited subscription filter names that matched with the originating log data.",
                "Name": "subscriptionfilters",
                "Type": "string",
              },
              {
                "Comment": "The ID property is a unique identifier for every log event.",
                "Name": "logeventsid",
                "Type": "string",
              },
              {
                "Comment": "Timestamp of the log event",
                "Name": "logeventstimestamp",
                "Type": "timestamp",
              },
              {
                "Comment": "REPLACED-JSON-PATH.json",
                "Name": "logeventsmessage",
                "Type": "string",
              },
            ],
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "FirehoseToS3SetupFirehoseKinesisStreamServiceRoleDCF2BF9E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to get records from Kinesis.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kinesis:DescribeStream",
                    "kinesis:GetShardIterator",
                    "kinesis:GetRecords",
                    "kinesis:ListShards",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "LogsKinesisStreamCfn",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey",
                    "kms:ReEncryptTo",
                    "kms:GenerateDataKeyWithoutPlaintext",
                    "kms:GenerateDataKeyPairWithoutPlaintext",
                    "kms:GenerateDataKeyPair",
                    "kms:ReEncryptFrom",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "LogsReplicationKeyAE749486",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessKinesis",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FirehoseToS3SetupFirehosePrefixProcessingLambdaCFF0C71A": {
      "DependsOn": [
        "FirehoseToS3SetupFirehosePrefixProcessingLambdaServiceRole55C795C1",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "DynamicS3LogPartitioningMapping": "REPLACED-JSON-PATH.json",
          },
        },
        "FunctionName": "AWSAccelerator-FirehoseRecordsProcessor",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "AcceleratorLambdaKeyD279839E",
            "Arn",
          ],
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "FirehoseToS3SetupFirehosePrefixProcessingLambdaServiceRole55C795C1",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "FirehoseToS3SetupFirehosePrefixProcessingLambdaServiceRole55C795C1": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FirehoseToS3SetupFirehoseS3ServiceRole1E95E56A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Bucket permissions are wildcards to abort downloads and clean up objects. KMS permissions are wildcards to re-encrypt entities.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Kinesis Firehose to place Kinesis records in the central bucket.",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:GenerateDataKey",
                  ],
                  "Condition": {
                    "StringEquals": {
                      "kms:ViaService": "s3.us-east-1.amazonaws.com",
                    },
                    "StringLike": {
                      "kms:EncryptionContext:aws:s3:arn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition",
                            },
                            ":s3:::aws-accelerator-central-logs-333333333333-us-west-2/*",
                          ],
                        ],
                      },
                    },
                  },
                  "Effect": "Allow",
                  "Resource": {
                    "Ref": "AcceleratorCentralLogBucketKeyLookup26F8C418",
                  },
                },
                {
                  "Action": [
                    "s3:AbortMultipartUpload",
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:PutObject",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::aws-accelerator-central-logs-333333333333-us-west-2",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::aws-accelerator-central-logs-333333333333-us-west-2/*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:GetFunctionConfiguration",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "FirehoseToS3SetupFirehosePrefixProcessingLambdaCFF0C71A",
                              "Arn",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "FirehoseToS3SetupFirehosePrefixProcessingLambdaCFF0C71A",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "glue:GetTable",
                    "glue:GetTableVersion",
                    "glue:GetTableVersions",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:us-east-1:333333333333:catalog",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:us-east-1:333333333333:database/",
                          {
                            "Ref": "FirehoseToS3SetupFirehoseCloudWatchDb3683542E",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:us-east-1:333333333333:table/",
                          {
                            "Ref": "FirehoseToS3SetupFirehoseCloudWatchDb3683542E",
                          },
                          "/",
                          {
                            "Ref": "FirehoseToS3SetupFirehoseCloudWatchTable07CBDE10",
                          },
                        ],
                      ],
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessS3KmsLambda",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FirehoseToS3SetupKinesisFirehoseStreamDynamicPartitioning65876320": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KDF1",
              "reason": "Customer managed key is used to encrypt firehose delivery stream.",
            },
          ],
        },
      },
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":s3:::aws-accelerator-central-logs-333333333333-us-west-2",
              ],
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 64,
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": true,
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {
                  "CaseInsensitive": true,
                },
              },
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {
                  "Compression": "SNAPPY",
                },
              },
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "FirehoseToS3SetupFirehoseCloudWatchDb3683542E",
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "FirehoseToS3SetupFirehoseS3ServiceRole1E95E56A",
                  "Arn",
                ],
              },
              "TableName": {
                "Ref": "FirehoseToS3SetupFirehoseCloudWatchTable07CBDE10",
              },
            },
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Ref": "AcceleratorCentralLogBucketKeyLookup26F8C418",
              },
            },
          },
          "ErrorOutputPrefix": "CloudWatchLogs/processing-failed",
          "Prefix": "!{partitionKeyFromLambda:dynamicPrefix}",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "FirehoseToS3SetupFirehosePrefixProcessingLambdaCFF0C71A",
                        "Arn",
                      ],
                    },
                  },
                  {
                    "ParameterName": "NumberOfRetries",
                    "ParameterValue": "3",
                  },
                  {
                    "ParameterName": "BufferSizeInMBs",
                    "ParameterValue": "0.2",
                  },
                  {
                    "ParameterName": "BufferIntervalInSeconds",
                    "ParameterValue": "60",
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "FirehoseToS3SetupFirehoseS3ServiceRole1E95E56A",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "LogsKinesisStreamCfn",
              "Arn",
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "FirehoseToS3SetupFirehoseKinesisStreamServiceRoleDCF2BF9E",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "LogsDestinationSetup408DBC7D": {
      "Properties": {
        "DestinationName": "AWSAcceleratorCloudWatchToS3",
        "DestinationPolicy": {
          "Fn::Join": [
            "",
            [
              "{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"AWS":["*"]},"Action":"logs:PutSubscriptionFilter","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":logs:us-east-1:333333333333:destination:AWSAcceleratorCloudWatchToS3","Condition":{"StringEquals":{"aws:PrincipalOrgID":"",
              {
                "Ref": "Organization29A5FC3F",
              },
              ""}}}]}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "LogsDestinationSetupLogsKinesisRoleBBFE4D49",
            "Arn",
          ],
        },
        "TargetArn": {
          "Fn::GetAtt": [
            "LogsKinesisStreamCfn",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::Destination",
    },
    "LogsDestinationSetupLogsKinesisRoleBBFE4D49": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "logs.us-east-1.",
                      {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kinesis:ListShards",
                    "kinesis:PutRecord",
                    "kinesis:PutRecords",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "LogsKinesisStreamCfn",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "KinesisAccess",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey",
                    "kms:ReEncryptTo",
                    "kms:GenerateDataKeyWithoutPlaintext",
                    "kms:GenerateDataKeyPairWithoutPlaintext",
                    "kms:GenerateDataKeyPair",
                    "kms:ReEncryptFrom",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "LogsReplicationKeyAE749486",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "KmsAccess",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogsKinesisStreamCfn": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KDS3",
              "reason": "Customer managed key is being used to encrypt Kinesis Data Stream",
            },
          ],
        },
      },
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "EncryptionType": "KMS",
          "KeyId": {
            "Fn::GetAtt": [
              "LogsReplicationKeyAE749486",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "LogsReplicationKeyAE749486": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": "AWS Accelerator CloudWatch Logs Replication Kms Key",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::333333333333:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "LogsReplicationKeyAlias6226562C": {
      "Properties": {
        "AliasName": "alias/accelerator/kms/replication/cloudwatch/logs/key",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "LogsReplicationKeyAE749486",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "LogsSubscriptionFilter58C57C6B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomUpdateSubscriptionFilterCustomResourceProviderLogGroup0738E05B",
        "LogsDestinationSetupLogsKinesisRoleBBFE4D49",
        "LogsDestinationSetup408DBC7D",
      ],
      "Properties": {
        "LogDestination": "arn:aws:logs:us-east-1:333333333333:destination:AWSAcceleratorCloudWatchToS3",
        "LogKmsKeyArn": {
          "Fn::GetAtt": [
            "AcceleratorCloudWatchKeyF93B6E17",
            "Arn",
          ],
        },
        "LogRetention": "3653",
        "LogSubscriptionRole": {
          "Fn::GetAtt": [
            "SubscriptionFilterRoleB0B89330",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomUpdateSubscriptionFilterCustomResourceProviderHandler1BAA7608",
            "Arn",
          ],
        },
      },
      "Type": "Custom::UpdateSubscriptionFilter",
      "UpdateReplacePolicy": "Delete",
    },
    "NewCloudWatchLogsCreateEventNewLogGroupCreatedRuleA43A0A6D": {
      "DependsOn": [
        "LogsSubscriptionFilter58C57C6B",
      ],
      "Properties": {
        "EventPattern": {
          "detail": {
            "eventName": [
              "CreateLogGroup",
            ],
            "eventSource": [
              "logs.amazonaws.com",
            ],
          },
          "detail-type": [
            "AWS API Call via CloudTrail",
          ],
          "source": [
            "aws.logs",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunction1A3BCE58",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RetryPolicy": {
              "MaximumRetryAttempts": 5,
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "NewCloudWatchLogsCreateEventNewLogGroupCreatedRuleAllowEventRuleAWSAcceleratorLoggingStack333333333333useast1NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunction8CBF4C192DFF85CD": {
      "DependsOn": [
        "LogsSubscriptionFilter58C57C6B",
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunction1A3BCE58",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "NewCloudWatchLogsCreateEventNewLogGroupCreatedRuleA43A0A6D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunction1A3BCE58": {
      "DependsOn": [
        "LogsSubscriptionFilter58C57C6B",
        "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunctionServiceRoleDefaultPolicy5DE2EB5C",
        "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunctionServiceRoleF408E8D2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Environment": {
          "Variables": {
            "LogDestination": "arn:aws:logs:us-east-1:333333333333:destination:AWSAcceleratorCloudWatchToS3",
            "LogKmsKeyArn": {
              "Fn::GetAtt": [
                "AcceleratorCloudWatchKeyF93B6E17",
                "Arn",
              ],
            },
            "LogRetention": "3653",
            "LogSubscriptionRole": {
              "Fn::GetAtt": [
                "SubscriptionFilterRoleB0B89330",
                "Arn",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "AcceleratorLambdaKeyD279839E",
            "Arn",
          ],
        },
        "Role": {
          "Fn::GetAtt": [
            "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunctionServiceRoleF408E8D2",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunctionServiceRoleDefaultPolicy5DE2EB5C": {
      "DependsOn": [
        "LogsSubscriptionFilter58C57C6B",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "This role needs permissions to change retention and subscription filter for any new log group that is created to enable log replication.",
            },
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:AssociateKmsKey",
                "logs:DescribeLogGroups",
                "logs:DescribeSubscriptionFilters",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:us-east-1:333333333333:log-group:*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:PutSubscriptionFilter",
                "logs:DeleteSubscriptionFilter",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:us-east-1:333333333333:log-group:*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:us-east-1:333333333333:destination:*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunctionServiceRoleDefaultPolicy5DE2EB5C",
        "Roles": [
          {
            "Ref": "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunctionServiceRoleF408E8D2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "NewCloudWatchLogsCreateEventSetLogRetentionSubscriptionFunctionServiceRoleF408E8D2": {
      "DependsOn": [
        "LogsSubscriptionFilter58C57C6B",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "This role needs permissions to change retention and subscription filter for any new log group that is created to enable log replication.",
            },
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Managed policy for Lambda basic execution attached.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Organization29A5FC3F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomOrganizationsDescribeOrganizationCustomResourceProviderHandler4C6F49D1",
            "Arn",
          ],
        },
        "partition": {
          "Ref": "AWS::Partition",
        },
      },
      "Type": "Custom::DescribeOrganization",
      "UpdateReplacePolicy": "Delete",
    },
    "S3PublicAccessBlock344F906B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomS3PutPublicAccessBlockCustomResourceProviderLogGroup354123A8",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3PutPublicAccessBlockCustomResourceProviderHandler978E227B",
            "Arn",
          ],
        },
        "accountId": "333333333333",
        "blockPublicAcls": true,
        "blockPublicPolicy": true,
        "ignorePublicAcls": true,
        "restrictPublicBuckets": true,
      },
      "Type": "Custom::PutPublicAccessBlock",
      "UpdateReplacePolicy": "Delete",
    },
    "SecuritySNSTopicE3C1354E": {
      "Properties": {
        "DisplayName": "aws-accelerator-Security",
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "AcceleratorSnsTopicKey4E909F1D",
            "Arn",
          ],
        },
        "TopicName": "aws-accelerator-Security",
      },
      "Type": "AWS::SNS::Topic",
    },
    "SecuritySNSTopicPolicyFA391E1F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudwatch.amazonaws.com",
              },
              "Resource": {
                "Ref": "SecuritySNSTopicE3C1354E",
              },
              "Sid": "0",
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
              "Resource": {
                "Ref": "SecuritySNSTopicE3C1354E",
              },
              "Sid": "1",
            },
            {
              "Action": "sns:Publish",
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalOrgID": {
                    "Ref": "Organization29A5FC3F",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Ref": "SecuritySNSTopicE3C1354E",
              },
              "Sid": "2",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": [
          {
            "Ref": "SecuritySNSTopicE3C1354E",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
    "SecuritySNSTopicnotifysecurityexamplecomUPDATEEMAILADDRESS3E2951A5": {
      "Properties": {
        "Endpoint": "<notify-security>@example.com <----- UPDATE EMAIL ADDRESS",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "SecuritySNSTopicE3C1354E",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "SsmParamAcceleratorVersionFF83282D": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-LoggingStack-333333333333-us-east-1/version",
        "Type": "String",
        "Value": "1.4.1",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamStackId521A78D3": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-LoggingStack-333333333333-us-east-1/stack-id",
        "Type": "String",
        "Value": {
          "Ref": "AWS::StackId",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SubscriptionFilterRoleB0B89330": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Access is needed to ready all log events across all log groups for replication to S3.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "logs.us-east-1.",
                      {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used by Subscription Filter to allow access to CloudWatch Destination",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "accessLogEvents",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
